#!/bin/env python

import sys
from argparse import ArgumentParser, REMAINDER

from twisted.internet import reactor
from ashttp.server import TunnelServerService
from ashttp.runner import run_with_twistd 

if __name__ == '__main__':
	arg_parser = ArgumentParser(description='Clone an http tunnel server')
	arg_parser.add_argument('listen_port', type=int)
	arg_parser.add_argument('-P', '--proxy-server', required=True, metavar='ip:port', help='IP and port of remote proxy server')
	arg_parser.add_argument('-t', '--twistd', nargs=REMAINDER, help='Run by twistd. Next options will redirected to twistd')
	parsed_args = arg_parser.parse_args()

	try:
		proxy_ip, proxy_port = parsed_args.proxy_server.split(':')
		proxy_port = int(proxy_port)
	except ValueError:
		arg_parser.error("Invalid IP and Port for proxy server")

	TunnelServerService.remote_host = proxy_ip
	TunnelServerService.remote_port = proxy_port
	tunnel_server = TunnelServerService(reactor)
	reactor.listenTCP(parsed_args.listen_port, tunnel_server.getServerFactory())

	if parsed_args.twistd is not None:
		run_with_twistd(parsed_args.twistd, 'HttpTunnelServer')
	else:
		reactor.run()
